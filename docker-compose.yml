version: '3'

networks:
  backend:

services:
  nginx:
    image: nginx:stable
    container_name: nginx
    ports:
      - "${NGINX_PORT}:80"
      - "443:443"
    volumes:
      - ./projects:/var/www
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx/
    environment:
      TZ: ${WORKSPACE_TIMEZONE}
    networks:
      - backend

  redis:
    image: redis:latest
    ports:
      - "${REDIS_PORT}:6379"
    container_name: redis
    volumes:
      - ./redis/data:/var/lib/redis
      - ./redis/conf:/usr/local/etc/redis/redis.conf
    environment:
      TZ: ${WORKSPACE_TIMEZONE}
    networks:
      - backend
      
  #redis-commander:
  #  container_name: redis-commander
  #  hostname: redis-commander
  #  image: rediscommander/redis-commander:latest
  #  restart: always
  #  environment:
  #    - REDIS_HOSTS=local:redis:6379
  #  ports:
  #    - "8081:8081"
  #  networks:
  #    - backend

  mysql-5.7:
    image: mysql:5.7
    container_name: mysql-5.7
    restart: unless-stopped
    volumes:
      - ./mysql-5.7/data:/var/lib/mysql
      - ./mysql-5.7/conf.d:/etc/mysql/conf.d
      - ./mysql-5.7/logs:/var/log/mysql/
      - ./mysql-5.7/dump:/dump
    ports:
      - "${MYSQL_5_7_PORT}:3306"
    security_opt:
      - seccomp:unconfined
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      TZ: ${WORKSPACE_TIMEZONE}
    networks:
      - backend

  #mysql-8:
  #  image: mysql:8.0.21
  #  command: --default-authentication-plugin=mysql_native_password --skip_name_resolve
  #  container_name: mysql-8
  #  restart: unless-stopped
  #  volumes:
  #    - ./mysql-8/data:/var/lib/mysql
  #    - ./mysql-8/conf.d:/etc/mysql/conf.d
  #    - ./mysql-8/logs:/var/log/mysql/
  #    - ./mysql-8/dump:/dump
  #  ports:
  #    - "${MYSQL_8_PORT}:3306"
  #  security_opt:
  #    - seccomp:unconfined
  #  environment:
  #    MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  #    TZ: ${WORKSPACE_TIMEZONE}
  #  networks:
  #    - backend
      
  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - "8082:8080"
    networks:
      - backend

  #postgres:
  #  image: postgres:alpine
  #  volumes:
  #    - ./postgres/data:/var/lib/postgresql/data
  #    - ./postgres/dump:/dump
  #  ports:
  #    - "${POSTGRES_PORT}:5432"
  #  environment:
  #    POSTGRES_DB: ${POSTGRES_DB}
  #    POSTGRES_USER: ${POSTGRES_USER}
  #    POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #    TZ: ${WORKSPACE_TIMEZONE}
  #  networks:
  #      - backend
  #  container_name: postgres

  mongo:
    image: mongo:4.2
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - ./mongo/db:/data/db
      - ./mongo/configdb:/data/configdb
      - ./mongo/dump:/dump
    environment:
      TZ: ${WORKSPACE_TIMEZONE}
    networks:
      - backend
    container_name: mongo

  php-8:
    build:
      context: ./php-workspace/php-8
      dockerfile: Dockerfile
      args:
        DOCKER_PHP_VERSION: '8'
        DOCKER_PHP_ENABLE_XDEBUG: '${DOCKER_PHP_ENABLE_XDEBUG}'
        TZ: ${WORKSPACE_TIMEZONE}
    working_dir: /var/www
    container_name: php-8
    volumes:
      - ./.ssh:/home/www-data/.ssh
      - ./projects:/var/www
      - ./php-ini/8/php.ini:/usr/local/etc/php/php.ini
    environment:
      COMPOSER_MEMORY_LIMIT: -1
    ports:
      - "${PHP_8_PORT}:9000"
    networks:
      - backend

  php-7.4:
    build:
      context: ./php-workspace/php-7.4
      dockerfile: Dockerfile
      args:
        DOCKER_PHP_VERSION: '7.4'
        DOCKER_PHP_ENABLE_XDEBUG: '${DOCKER_PHP_ENABLE_XDEBUG}'
        TZ: ${WORKSPACE_TIMEZONE}
    working_dir: /var/www
    container_name: php-7.4
    volumes:
      - ./.ssh:/home/www-data/.ssh
      - ./projects:/var/www
      - ./php-ini/7.4/php.ini:/usr/local/etc/php/php.ini
    ports:
      - "${PHP_7_4_PORT}:9000"
    networks:
      - backend

      
  php-7.2:
    build:
      context: ./php-workspace/php-7.2
      dockerfile: Dockerfile
      args:
        DOCKER_PHP_VERSION: '7.2'
        DOCKER_PHP_ENABLE_XDEBUG: '${DOCKER_PHP_ENABLE_XDEBUG}'
        TZ: ${WORKSPACE_TIMEZONE}
    working_dir: /var/www
    container_name: php-7.2
    volumes:
      - ./.ssh:/home/www-data/.ssh
      - ./projects:/var/www
      - ./php-ini/7.2/php.ini:/usr/local/etc/php/php.ini
      - ./php-workers/7.2/supervisor.d:/etc/supervisor.d
    ports:
      - "${PHP_7_2_PORT}:9000"
    networks:
      - backend
  
